version: "3.9"
services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    restart: on-failure
    ports:
      - "2181:2181"
    volumes:
      - ~/kafka/data/zookeeper_data:/var/lib/zookeeper/data
      - ~/kafka/data/zookeeper_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    restart: on-failure
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "9092" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: INTERNAL://:29092, SASL_PLAINTEXT://:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT, SASL_PLAINTEXT:SASL_PLAINTEXT
      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SASL_PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS}
    volumes:
      - ./kafka_server_jaas.conf:/etc/kafka/kafka_server_jaas.conf
      - ~/kafka/data/broker_data:/var/lib/kafka/data
      - ~/kafka/data/broker_log:/var/lib/kafka/log

  akhq:
    image: tchiotludo/akhq
    container_name: akhq
    restart: on-failure
    ports:
      - "9000:8080"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka:29092"
    depends_on:
      kafka:
        condition: service_healthy
